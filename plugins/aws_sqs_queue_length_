#!/usr/bin/env python

import os
import sys

import boto
from boto.sqs.connection import SQSConnection

from munin import MuninPlugin

class AWSSQSQueueLengthPlugin(MuninPlugin):
    category = "AWS"
    args = "-l 0 --base 1000"
    vlabel = "Messages"
    info = "Show number of messages in an SQS queue"

    @property
    def title(self):
        return "Length of AWS SQS queues in '%s'" % self.region

    @property
    def fields(self):
        return [
            (q, dict(
                label = "messages in %s" % q,
                type = "GAUGE",
                min = "0",
            )) for q in self.queues
        ]

    def __init__(self):
        self.api_key = os.environ['AWS_KEY']
        self.secret_key = os.environ['AWS_SECRET']
        self.queues = (sys.argv[0].rsplit('_', 1)[-1] or os.environ['SQS_QUEUES']).split(',')
        self.region = os.environ.get('AWS_REGION', "us-east-1")

    def execute(self):
        conn = boto.sqs.connect_to_region(self.region, aws_access_key_id=self.api_key, aws_secret_access_key=self.secret_key)
        return dict(
            (qname, conn.get_queue(qname).count())
            for qname in self.queues
        )

if __name__ == "__main__":
    AWSSQSQueueLengthPlugin().run()
